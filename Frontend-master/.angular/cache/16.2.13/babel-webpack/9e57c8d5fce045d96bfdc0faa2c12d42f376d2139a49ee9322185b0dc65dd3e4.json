{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let JobapplicationService = /*#__PURE__*/(() => {\n  class JobapplicationService {\n    constructor(http) {\n      this.http = http;\n      this.baseUrl = \"http://localhost:8001/jobApplication\";\n    }\n    //POST Method\n    applyToJob(jobapplication) {\n      console.log(\"Apply to Job Method\");\n      const headers = new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8');\n      return this.http.post(`${this.baseUrl}/apply`, jobapplication, {\n        headers,\n        responseType: 'text'\n      });\n    }\n    //GET Method\n    findAll() {\n      console.log(\"Find All Applications Method\");\n      const headers = new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8');\n      return this.http.get(`${this.baseUrl}/findAll`, {\n        headers,\n        responseType: 'json'\n      });\n    }\n    //DELETE Mapping\n    withdrawApplication(id) {\n      console.log(\"Withdraw Job Application\");\n      const headers = new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8');\n      return this.http.delete(`${this.baseUrl}/delete/${id}`, {\n        headers,\n        responseType: 'json'\n      });\n    }\n    //PUT Mapping\n    updateApplication(id, jobapplication) {\n      console.log(\"Update Job Application\");\n      const headers = new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8');\n      return this.http.put(`${this.baseUrl}/update/${id}`, jobapplication, {\n        headers,\n        responseType: 'json'\n      });\n    }\n    //GET Mapping\n    getAllApplicants(jobId) {\n      console.log(\"Find Applications for a Job method\");\n      const headers = new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8');\n      return this.http.get(`${this.baseUrl}/findAll/job/${jobId}`, {\n        headers,\n        responseType: 'json'\n      });\n    }\n    //GET Method\n    findByFreelancerId(jobId, freelancerId) {\n      console.log(\"Find Applications for a Job method\");\n      const headers = new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8');\n      return this.http.get(`${this.baseUrl}/findByFrId/job/${jobId}/frId/${freelancerId}`, {\n        headers,\n        responseType: 'json'\n      });\n    }\n    static #_ = this.ɵfac = function JobapplicationService_Factory(t) {\n      return new (t || JobapplicationService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: JobapplicationService,\n      factory: JobapplicationService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return JobapplicationService;\n})();\nexport class JobApplication {}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}