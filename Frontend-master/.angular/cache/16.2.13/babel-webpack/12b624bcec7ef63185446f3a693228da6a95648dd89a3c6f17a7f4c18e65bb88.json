{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let AdminService = /*#__PURE__*/(() => {\n  class AdminService {\n    constructor(http) {\n      this.http = http;\n      this.baseUrl = \"http://localhost:8001/admin\";\n    }\n    //GET Method\n    findById(id) {\n      console.log(\"Find Admin by id method\");\n      const headers = new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8');\n      return this.http.get(`${this.baseUrl}/find/id/${id}`, {\n        headers,\n        responseType: 'json'\n      });\n    }\n    //GET Method\n    findByName(name) {\n      console.log(\"Find Admin by userName method\");\n      const headers = new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8');\n      return this.http.get(`${this.baseUrl}/find/name/${name}`, {\n        headers,\n        responseType: 'json'\n      });\n    }\n    //POST Method\n    addAdmin(admin) {\n      console.log(\"Add Admin Method\");\n      const headers = new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8');\n      return this.http.post(`${this.baseUrl}/save`, admin, {\n        headers,\n        responseType: 'text'\n      });\n    }\n    //PUT Method\n    updateAdmin(id, admin) {\n      console.log(\"Update Admin Method\");\n      const headers = new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8');\n      return this.http.put(`${this.baseUrl}/update/${id}`, admin, {\n        headers,\n        responseType: 'text'\n      });\n    }\n    static #_ = this.ɵfac = function AdminService_Factory(t) {\n      return new (t || AdminService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AdminService,\n      factory: AdminService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return AdminService;\n})();\nexport class Admin {}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}