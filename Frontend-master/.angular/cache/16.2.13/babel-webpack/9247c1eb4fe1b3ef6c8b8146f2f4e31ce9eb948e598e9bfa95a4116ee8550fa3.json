{"ast":null,"code":"/* import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Admin, AdminService } from 'src/app/services/admin.service';\r\nimport { Freelancer, FreelancerService } from 'src/app/services/freelancer.service';\r\nimport { Recruiter, RecruiterService } from 'src/app/services/recruiter.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  signUpForm: FormGroup;\r\n  admin: Admin;\r\n  recruiter: Recruiter;\r\n  freelancer: Freelancer;\r\n  id: number;\r\n  role: string;\r\n  signUpFormSubmitAttempt: boolean;\r\n  loginFormSubmitAttempt: boolean;\r\n  \r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private adminService: AdminService,\r\n    private recruiterService: RecruiterService,\r\n    private freelancerService: FreelancerService,\r\n    private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loginForm = this.formBuilder.group({\r\n      loginId: ['', Validators.required],\r\n      role: ['', Validators.required],\r\n      password: ['', Validators.required]\r\n    });\r\n    this.signUpForm = this.formBuilder.group({\r\n      firstName: ['', Validators.required],\r\n      lastName: ['', Validators.required],\r\n      userName: ['', Validators.required],\r\n      password: ['', Validators.required],\r\n      role: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  onsubmit() {\r\n    console.log(\"Login Form Submission attempted\");\r\n    this.loginFormSubmitAttempt = true;\r\n    if (this.loginForm.valid) {\r\n      const role = this.loginForm.get('role').value;\r\n      const loginId = this.loginForm.get('loginId').value;\r\n      const password = this.loginForm.get('password').value;\r\n\r\n      //Admin Role\r\n      if (role === '1') {\r\n        this.adminService.findByName(loginId).subscribe(\r\n          data => {\r\n            console.log(data.userName);\r\n            if (data.password === password) {\r\n              alert(\"Logged in Successfully\");\r\n              this.redirect(\"admin-dashboard\");\r\n              localStorage.setItem('loggedIn', \"true\");\r\n            } else {\r\n              alert(\"Invalid Login Details!\");\r\n            }\r\n          }, err => {\r\n            console.log(err);\r\n            if (err.status === 400) {\r\n              alert(err.error);\r\n            }\r\n          });\r\n\r\n      }\r\n\r\n      //Recruiter Role\r\n      else if (role === '2') {\r\n\r\n        this.recruiterService.getByName(loginId).subscribe(\r\n          data => {\r\n            console.log(data.userName);\r\n            if (data.password === password) {\r\n              alert(\"Logged in Successfully\");\r\n              // this.recruiterService.setRecruiterId(data.id);\r\n              // console.log(this.recruiterService.getRecruiterId());\r\n              localStorage.setItem('recruiterUName', loginId);\r\n              localStorage.setItem('recruiterId', data.id);\r\n              this.redirect(\"recruiter-dashboard\");\r\n              localStorage.setItem('loggedIn', \"true\");\r\n            } else {\r\n              alert(\"Invalid Login Details!\");\r\n            }\r\n          }, err => {\r\n            console.log(err);\r\n            if (err.status === 400) {\r\n              alert(err.error);\r\n            }\r\n          });\r\n\r\n      }\r\n\r\n      //Freelancer Role\r\n      else if (role === '3') {\r\n        this.freelancerService.getByUserName(loginId).subscribe(\r\n          data => {\r\n            console.log(data.userName);\r\n            if (data.password === password) {\r\n              alert(\"Logged in Successfully\");\r\n              localStorage.setItem('freelancerUName', loginId);\r\n              localStorage.setItem('freelancerId', data.id);\r\n              this.freelancerService.setFreelancerId(data.id);\r\n              this.redirect(\"freelancer-dashboard\");\r\n              localStorage.setItem('loggedIn', \"true\");\r\n            } else {\r\n              alert(\"Invalid Login Details!\");\r\n            }\r\n          }, err => {\r\n            console.log(err);\r\n            if (err.status === 400) {\r\n              alert(err.error);\r\n            }\r\n          });\r\n      }\r\n    }\r\n  }\r\n\r\n  isSignUpFieldInvalid(field: string) {\r\n    return (\r\n      (!this.signUpForm.get(field).valid && this.signUpForm.get(field).touched) ||\r\n      (this.signUpForm.get(field).untouched && this.signUpFormSubmitAttempt)\r\n    );\r\n  }\r\n\r\n  isLoginFieldInvalid(field: string) {\r\n    return (\r\n      (!this.loginForm.get(field).valid && this.loginForm.get(field).touched) ||\r\n      (this.loginForm.get(field).untouched && this.loginFormSubmitAttempt)\r\n    );\r\n  }\r\n\r\n  createUser() {\r\n    if (this.signUpForm.valid) {\r\n      console.log(\"Trying to create a new user\");\r\n      this.role = this.signUpForm.value.role;\r\n      console.log(this.role);\r\n      if(this.role==='1') {\r\n        console.log(\"Creating new Admin.\");\r\n        this.admin = new Admin();\r\n        this.admin.firstName = this.signUpForm.value.firstName;\r\n        this.admin.lastName = this.signUpForm.value.lastName;\r\n        this.admin.userName = this.signUpForm.value.userName;\r\n        this.admin.password = this.signUpForm.value.password;\r\n        console.log(this.admin);\r\n        this.adminService.addAdmin(this.admin)\r\n          .subscribe(\r\n            data =>{\r\n              console.log(data);\r\n              this.router.navigate(['/login']);\r\n            },\r\n            err =>{\r\n              //alert(err.error);\r\n              console.log(err);\r\n            }\r\n          );\r\n      }\r\n      else if(this.role === '2') {\r\n        console.log(\"Creating new Recruiter\");\r\n        var recruiter: Recruiter = new Recruiter();\r\n        recruiter.firstName = this.signUpForm.value.firstName;\r\n        recruiter.lastName = this.signUpForm.value.lastName;\r\n        recruiter.userName = this.signUpForm.value.userName;\r\n        recruiter.password = this.signUpForm.value.password;\r\n        console.log(recruiter);\r\n        this.recruiterService.addRecruiter(recruiter)\r\n          .subscribe(\r\n            data =>{\r\n              console.log(data);\r\n              this.router.navigate(['/login']);\r\n            },\r\n            err=>{\r\n              alert(err.error);\r\n            }\r\n          );\r\n      }\r\n      else if(this.role === '3') {\r\n        console.log(\"Creating new Freelancer\");\r\n        var freelancer: Freelancer = new Freelancer();\r\n        freelancer.firstName = this.signUpForm.value.firstName;\r\n        freelancer.lastName = this.signUpForm.value.lastName;\r\n        freelancer.userName = this.signUpForm.value.userName;\r\n        freelancer.password = this.signUpForm.value.password;\r\n        console.log(freelancer);\r\n        this.freelancerService.addFreelancer(freelancer)\r\n          .subscribe(\r\n            data =>{\r\n              console.log(data);\r\n              this.router.navigate(['/login']);\r\n            },\r\n            err=>{\r\n              alert(err.error);\r\n            }\r\n          )\r\n      }\r\n      else if(this.role === '4') {\r\n        console.log(\"Creating new Freelancer\");\r\n        var freelancer: Freelancer = new Freelancer();\r\n        freelancer.firstName = this.signUpForm.value.firstName;\r\n        freelancer.lastName = this.signUpForm.value.lastName;\r\n        freelancer.userName = this.signUpForm.value.userName;\r\n        freelancer.password = this.signUpForm.value.password;\r\n        console.log(freelancer);\r\n        this.freelancerService.addFreelancer(freelancer)\r\n          .subscribe(\r\n            data =>{\r\n              console.log(data);\r\n              this.router.navigate(['/login']);\r\n            },\r\n            err=>{\r\n              alert(err.error);\r\n            }\r\n          )\r\n      }\r\n    }\r\n    this.signUpFormSubmitAttempt = true;\r\n  }\r\n\r\n  \r\n  redirect(role: string) {\r\n    this.router.navigate([`${role}`]);\r\n  }\r\n\r\n}\r\n*/\n/*\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Admin, AdminService } from 'src/app/services/admin.service';\r\nimport { Freelancer, FreelancerService } from 'src/app/services/freelancer.service';\r\nimport { Recruiter, RecruiterService } from 'src/app/services/recruiter.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  signUpForm: FormGroup;\r\n  admin: Admin;\r\n  recruiter: Recruiter;\r\n  freelancer: Freelancer;\r\n  id: number;\r\n  role: string;\r\n  signUpFormSubmitAttempt: boolean;\r\n  loginFormSubmitAttempt: boolean;\r\n  \r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private adminService: AdminService,\r\n    private recruiterService: RecruiterService,\r\n    private freelancerService: FreelancerService,\r\n    private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loginForm = this.formBuilder.group({\r\n      loginId: ['', Validators.required],\r\n      role: ['', Validators.required],\r\n      password: ['', Validators.required]\r\n    });\r\n    this.signUpForm = this.formBuilder.group({\r\n      firstName: ['', Validators.required],\r\n      lastName: ['', Validators.required],\r\n      userName: ['', Validators.required],\r\n      password: ['', Validators.required],\r\n      role: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  onsubmit() {\r\n    console.log(\"Login Form Submission attempted\");\r\n    this.loginFormSubmitAttempt = true;\r\n    if (this.loginForm.valid) {\r\n      const role = this.loginForm.get('role').value;\r\n      const loginId = this.loginForm.get('loginId').value;\r\n      const password = this.loginForm.get('password').value;\r\n\r\n      // Admin Role\r\n      if (role === '1') {\r\n        this.adminService.findByName(loginId).subscribe(\r\n          data => {\r\n            console.log(data.userName);\r\n            if (data.password === password) {\r\n              alert(\"Logged in Successfully\");\r\n              this.redirect(\"admin-dashboard\");\r\n              localStorage.setItem('loggedIn', \"true\");\r\n            } else {\r\n              alert(\"Invalid Login Details!\");\r\n            }\r\n          }, err => {\r\n            console.log(err);\r\n            if (err.status === 400) {\r\n              alert(err.error);\r\n            }\r\n          });\r\n\r\n      }\r\n\r\n      // Recruiter Role\r\n      else if (role === '2') {\r\n\r\n        this.recruiterService.getByName(loginId).subscribe(\r\n          data => {\r\n            console.log(data.userName);\r\n            if (data.password === password) {\r\n              alert(\"Logged in Successfully\");\r\n              localStorage.setItem('recruiterUName', loginId);\r\n              localStorage.setItem('recruiterId', data.id);\r\n              this.redirect(\"recruiter-dashboard\");\r\n              localStorage.setItem('loggedIn', \"true\");\r\n            } else {\r\n              alert(\"Invalid Login Details!\");\r\n            }\r\n          }, err => {\r\n            console.log(err);\r\n            if (err.status === 400) {\r\n              alert(err.error);\r\n            }\r\n          });\r\n\r\n      }\r\n\r\n      // Freelancer Role\r\n      else if (role === '3' || this.role === '4') {\r\n        this.freelancerService.getByUserName(loginId).subscribe(\r\n          data => {\r\n            console.log(data.userName);\r\n            if (data.password === password) {\r\n              alert(\"Logged in Successfully\");\r\n              localStorage.setItem('freelancerUName', loginId);\r\n              localStorage.setItem('freelancerId', data.id);\r\n              this.redirect(\"freelancer-dashboard\");\r\n              localStorage.setItem('loggedIn', \"true\");\r\n            } else {\r\n              alert(\"Invalid Login Details!\");\r\n            }\r\n          }, err => {\r\n            console.log(err);\r\n            if (err.status === 400) {\r\n              alert(err.error);\r\n            }\r\n          });\r\n      }\r\n    }\r\n  }\r\n\r\n  isSignUpFieldInvalid(field: string) {\r\n    return (\r\n      (!this.signUpForm.get(field).valid && this.signUpForm.get(field).touched) ||\r\n      (this.signUpForm.get(field).untouched && this.signUpFormSubmitAttempt)\r\n    );\r\n  }\r\n\r\n  isLoginFieldInvalid(field: string) {\r\n    return (\r\n      (!this.loginForm.get(field).valid && this.loginForm.get(field).touched) ||\r\n      (this.loginForm.get(field).untouched && this.loginFormSubmitAttempt)\r\n    );\r\n  }\r\n\r\n  createUser() {\r\n    if (this.signUpForm.valid) {\r\n      console.log(\"Trying to create a new user\");\r\n      this.role = this.signUpForm.value.role;\r\n      console.log(this.role);\r\n      if(this.role==='1') {\r\n        console.log(\"Creating new Admin.\");\r\n        this.admin = new Admin();\r\n        this.admin.firstName = this.signUpForm.value.firstName;\r\n        this.admin.lastName = this.signUpForm.value.lastName;\r\n        this.admin.userName = this.signUpForm.value.userName;\r\n        this.admin.password = this.signUpForm.value.password;\r\n        console.log(this.admin);\r\n        this.adminService.addAdmin(this.admin)\r\n          .subscribe(\r\n            data =>{\r\n              console.log(data);\r\n              window.alert(\"Signup successful. Please login.\");\r\n              this.router.navigate(['/login']);\r\n            },\r\n            err =>{\r\n              console.log(err);\r\n            }\r\n          );\r\n      }\r\n      else if(this.role === '2') {\r\n        console.log(\"Creating new Recruiter\");\r\n        var recruiter: Recruiter = new Recruiter();\r\n        recruiter.firstName = this.signUpForm.value.firstName;\r\n        recruiter.lastName = this.signUpForm.value.lastName;\r\n        recruiter.userName = this.signUpForm.value.userName;\r\n        recruiter.password = this.signUpForm.value.password;\r\n        console.log(recruiter);\r\n        this.recruiterService.addRecruiter(recruiter)\r\n          .subscribe(\r\n            data =>{\r\n              console.log(data);\r\n              window.alert(\"Signup successful. Please login.\");\r\n              this.router.navigate(['/login']);\r\n            },\r\n            err=>{\r\n              alert(err.error);\r\n            }\r\n          );\r\n      }\r\n      else if (this.role === '3' || this.role === '4') { // Handling both Freelancer and Job Seeker\r\n        console.log(\"Creating new Freelancer or Job Seeker\");\r\n        var user: Freelancer = new Freelancer();\r\n        user.firstName = this.signUpForm.value.firstName;\r\n        user.lastName = this.signUpForm.value.lastName;\r\n        user.userName = this.signUpForm.value.userName;\r\n        user.password = this.signUpForm.value.password;\r\n        console.log(user);\r\n        this.freelancerService.addFreelancer(user)\r\n          .subscribe(\r\n            data => {\r\n              console.log(data);\r\n              window.alert(\"Signup successful. Please login.\");\r\n              this.router.navigate(['/login']);\r\n            },\r\n            err => {\r\n              alert(err.error);\r\n            }\r\n          )\r\n      }\r\n    }\r\n    this.signUpFormSubmitAttempt = true;\r\n  }\r\n\r\n  \r\n  redirect(role: string) {\r\n    this.router.navigate([`${role}`]);\r\n  }\r\n\r\n}\r\n\r\n*/","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}