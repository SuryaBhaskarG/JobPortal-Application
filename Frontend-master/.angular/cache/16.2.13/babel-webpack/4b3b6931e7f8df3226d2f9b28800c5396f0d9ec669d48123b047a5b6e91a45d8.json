{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let FreelancerService = /*#__PURE__*/(() => {\n  class FreelancerService {\n    constructor(http) {\n      this.http = http;\n      this.baseUrl = \"http://localhost:8080/freelancer\";\n    }\n    //POST Method\n    addFreelancer(freelancer) {\n      console.log(\"Add Freelancer Method\");\n      const headers = new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8');\n      return this.http.post(`${this.baseUrl}/add`, freelancer, {\n        headers,\n        responseType: 'text'\n      });\n    }\n    //GET Method\n    getById(id) {\n      console.log(\"Get Freelancer by Id\");\n      const headers = new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8');\n      return this.http.get(`${this.baseUrl}/get/id/${id}`, {\n        headers,\n        responseType: 'json'\n      });\n    }\n    //GET Method\n    getByUserName(userName) {\n      console.log(\"Get Freelancer by Name\");\n      const headers = new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8');\n      return this.http.get(`${this.baseUrl}/get/name/${userName}`, {\n        headers,\n        responseType: 'json'\n      });\n    }\n    //PUT Method\n    updateFreelancer(id, freelancer) {\n      console.log(\"Update Freelancer Details\");\n      const headers = new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8');\n      return this.http.put(`${this.baseUrl}/update/${id}`, freelancer, {\n        headers,\n        responseType: 'json'\n      });\n    }\n    //GET Method\n    listAll() {\n      console.log(\"List Freelancers\");\n      const headers = new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8');\n      return this.http.get(`${this.baseUrl}/listAll`, {\n        headers,\n        responseType: 'json'\n      });\n    }\n    getFreelancerId() {\n      return this.freelancerId;\n    }\n    setFreelancerId(freelancerId) {\n      this.freelancerId = freelancerId;\n    }\n    static #_ = this.ɵfac = function FreelancerService_Factory(t) {\n      return new (t || FreelancerService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: FreelancerService,\n      factory: FreelancerService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return FreelancerService;\n})();\nexport class Freelancer {}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}